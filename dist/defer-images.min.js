/*
defer-images
version: 1.0.0
compiled: 2015-02-12
David Morrow
https://github.com/dperrymorrow/defer-images
*/
!function(){"use strict";window.defer={debug:[],imgs:[],loadTimes:[],showConsole:!0,allIn:!1,dur:200,"int":0,loading:0,loaded:0,active:!1,callback:null,listen:function(){this.active=!0,this.addEvent(window,"load",this.winLoaded),this["int"]=setInterval(this.run,this.dur)},addCallback:function(callback){this.loadCallback=callback},winLoaded:function(){defer.allIn=!0},run:function(){return defer.allIn&&defer.removeLoaded(),defer.allIn&&0===defer.imgs.length?void defer.destroy():(defer.checkAll(),void(0===defer.loading&&defer.bg.check()))},add:function(el){el.defer={src:el.getAttribute("data-src"),index:this.imgs.length,loading:!1,loaded:!1},this.imgs.push(el),this.active||(this.listen(),this.run())},imgLoaded:function(event){var el=defer.getTarget(event),now=(new Date).getTime();el&&(el.defer.loaded=!0,defer.trace("#"+el.defer.index+" loaded"),defer.removeEvent(el,"load",defer.imgLoaded),defer.loadTimes.push(now-el.defer.loadStart),defer.callback&&defer.callback(now)),defer.loaded+=1,defer.loading-=1},imgError:function(event){var img=defer.getTarget(event);img&&(img.defer.loaded=!0),defer.loading-=1},loadImg:function(el){this.loading+=1,el.setAttribute("onload",""),this.trace("#"+el.defer.index+" requested"),this.addEvent(el,"load",this.imgLoaded),this.addEvent(el,"error",this.imgError),el.src=el.defer.src,el.defer.loading=!0,el.defer.loadStart=(new Date).getTime()},removeLoaded:function(){var i,tmp=[];for(i=0;i<this.imgs.length;i+=1)this.imgs[i].defer.loaded?delete this.imgs[i].defer:tmp.push(this.imgs[i]);this.imgs=tmp},checkAll:function(){var el,i=0;for(i;i<this.imgs.length;i+=1)el=this.imgs[i],this.inView(el)&&!el.defer.loading&&this.loadImg(el)},inView:function(el){var box=el.getBoundingClientRect(),bottom=window.innerHeight||document.documentElement.clientHeight;return box.bottom>=0&&box.top<=bottom},destroy:function(){this.trace("shutdown, kill em' all.."),clearInterval(this["int"]),this.active=!1,this.loading=0,this.allIn=!1,this.imgs=[],defer.bg.avg=0,defer.bg.batchSize=10,defer.bg.found=0,this.debug=[]},trace:function(obj,type){return void 0!==window.console&&this.showConsole?(type=type||"log",void console[type](obj)):void this.debug.push(obj)},getTarget:function(event){event=event||window.event;var target;return event&&(target=event.target||event.srcElement),target},addEvent:function(el,name,callback){el.addEventListener?el.addEventListener(name,callback,!1):el.attachEvent&&el.attachEvent("on"+name,callback)},removeEvent:function(el,name,callback){el.removeEventListener?el.removeEventListener(name,callback):el.attachEvent&&el.detachEvent("on"+name,callback)}}}(),function(){"use strict";defer.bg={enabled:!0,batchSize:10,avg:0,found:0,speeds:[{lbl:"Modem",speed:4e3,batch:1},{lbl:"EDGE",speed:1e3,batch:3},{lbl:"DSL",speed:100,batch:5},{lbl:"Cable",speed:50,batch:10}],check:function(){this.enabled&&(this.findSpeed(),this.findImgs())},findImgs:function(){for(var el,i=0;i<defer.imgs.length;){if(el=defer.imgs[i],el.defer.loading||(this.found+=1,defer.trace("bg found #"+el.defer.index+" | "+this.found+" of "+this.batchSize+" limit"),defer.loadImg(el)),this.batchFull()){this.found=0;break}i+=1}},batchFull:function(){return this.batchSize<=this.found},findSpeed:function(){if(0===defer.loadTimes.length)return void(this.batchSize=this.speeds[0].batch);var x,i,group,sum=0,len=defer.loadTimes.length,div=len;for(x=0;len>x;x+=1)!isNaN(defer.loadTimes[x])&&defer.loadTimes[x]>0?sum+=parseFloat(defer.loadTimes[x],null):div-=1;for(this.avg=(sum/div).toPrecision(5),defer.trace(this.avg+" avg DL time"),i=0;i<this.speeds.length;i+=1)if(group=this.speeds[i],this.avg>group.speed){this.batchSize=group.batch;break}}}}();
//# sourceMappingURL=defer-images.min.js.map