/*
defer-images
version: 1.0.0
compiled: 2015-02-05
David Morrow
https://github.com/dperrymorrow/defer-images
*/
!function(){"use strict";window.defer={debug:[],imgs:[],loadTimes:[],showConsole:!0,allIn:!1,dur:200,"int":0,counts:{total:0,lastInView:0,loading:0},start:function(el){defer.dom.watchDom(el),this["int"]=setInterval(function(){return defer.allIn&&0===defer.imgs.length?void defer.destroy():(defer.images.checkAll(),void(0===defer.counts.loading&&defer.bg.check()))},this.dur)},done:function(){this.allIn=!0,defer.dom.stopWatching()},trace:function(obj,type){return void 0!==window.console&&this.showConsole?(type=type||"log",void console[type](obj)):void this.debug.push(obj)},destroy:function(){this.trace("shutdown, kill em' all.."),clearInterval(this["int"]),delete defer.imgs,delete defer.images,delete defer.bg,delete defer.debug,delete window.defer}}}(),function(){"use strict";defer.images={add:function(el){defer.counts.total+=1,el.defer={src:el.getAttribute("data-src"),index:defer.counts.total,loading:!1,loaded:!1},defer.imgs.push(el),defer.dom.inView(el)&&this.loadImg(el)},imgLoaded:function(event){var el=event.srcElement;el.className="loaded",defer.counts.loading-=1,defer.trace("#"+el.defer.index+" loaded"),el.onload=null,el.defer.loaded=!0,defer.loadTimes.push((new Date).getTime()-el.defer.loadStart),this.removeLoaded()},loadImg:function(el){defer.counts.loading+=1,defer.trace("#"+el.defer.index+" requested"),el.onload=function(event){defer.images.imgLoaded(event)},el.src=el.defer.src,el.defer.loading=!0,el.defer.loadStart=(new Date).getTime()},removeLoaded:function(){var i,tmp=[];for(i=0;i<defer.imgs.length;i+=1)defer.imgs[i].defer.loaded?delete defer.imgs[i].defer:tmp.push(defer.imgs[i]);defer.imgs=tmp},checkAll:function(){var el,i=0;for(i;i<defer.imgs.length;i+=1)el=defer.imgs[i],defer.dom.inView(el)&&!el.defer.loading&&this.loadImg(el)}}}(),function(){"use strict";defer.bg={enabled:!0,allDown:!1,allUp:!1,batchSize:10,check:function(){if(this.enabled){var dir=defer.dom.getScrollDir();this.found=0,this.scrollDir="up"===dir?"up"===dir&&this.allUp?"down":"up":"down"===dir&&this.allDown?"up":"down",this[this.scrollDir]()}},up:function(){for(var i=defer.imgs.length-1;i>=0&&(this.loadIfShould(i),this.allUp=0===i,console.log(i),!this.batchIsFull());)i-=1},down:function(){for(var i=0,len=defer.imgs.length-1;len>i&&(this.loadIfShould(i),this.allDown=i===len,!this.batchIsFull());)i+=1},loadIfShould:function(i){var el=defer.imgs[i],view=defer.counts.lastInView,index=el.defer.index;el.defer.loading||("up"===this.scrollDir&&view>index||"down"===this.scrollDir&&index>view)&&(this.found+=1,defer.trace("bg found "+this.found+" of "+this.batchSize+"limit"),defer.images.loadImg(el))},batchIsFull:function(){return this.batchSize<this.found}}}(),function(){"use strict";defer.dom={observer:!1,className:"defer",container:null,lastScrollPos:0,watchDom:function(el){this.container=el,void 0!==window.MutationObserver&&(this.observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){defer.dom.findImgs(mutation.addedNodes)})}),this.observer.observe(this.container,{attributes:!0,childList:!0,characterData:!1,subTree:!0,attributeFilter:["class"]}))},stopWatching:function(){this.observer&&this.observer.disconnect()},findImgs:function(nodes){var i,node;for(i=0;i<nodes.length;i+=1)node=nodes[i],node.childNodes.length>0&&defer.dom.findImgs(node.childNodes),node.classList&&node.classList.contains(defer.dom.className)&&defer.images.add(node)},inView:function(el){var box=el.getBoundingClientRect(),bottom=window.innerHeight||document.documentElement.clientHeight,visible=box.bottom>=0&&box.top<=bottom;return visible&&(defer.counts.lastInView=el.defer.index),visible},getScrollDir:function(){var supportPageOffset=void 0!==window.pageXOffset,isCSS1Compat="CSS1Compat"===(document.compatMode||""),y=supportPageOffset?window.pageYOffset:isCSS1Compat?document.documentElement.scrollTop:document.body.scrollTop,dir=y>=this.lastScrollPos?"down":"up";return this.lastScrollPos=y,dir}}}();
//# sourceMappingURL=defer-images.min.js.map