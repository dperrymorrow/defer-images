/*
defer-images
version: 1.0.0
compiled: 2015-02-04
David Morrow
https://github.com/dperrymorrow/defer-images
*/
!function(a,b){"use strict";b["true"]=a,window.defer={debugInfo:[],imgs:[],loadTimes:[],showConsole:!0,allRegistered:!1,scrollDir:"down",viewInt:200,bgInt:100,ints:[],counts:{total:0,lastInView:0,loading:0},start:function(a){defer.dom.watchDom(a),this.ints.push(setInterval(function(){return defer.allRegistered&&0===defer.imgs.length?void defer.destroy():void defer.images.checkAll()},this.viewInt)),this.ints.push(setInterval(function(){defer.bg.guessNext()},this.bgInt))},done:function(){this.allRegistered=!0,defer.dom.stopWatching()},trace:function(a,b){return void 0!==window.console&&this.showConsole?(b=b||"log",void console[b](a)):void this.debugInfo.push(a)},destroy:function(){this.trace("shutdown, kill em' all..");for(var a=this.ints.length-1;a>=0;a--)clearInterval(this.ints[a]);delete defer.imgs,delete defer.images,delete defer.bg,delete defer.debugInfo,delete window.defer}},defer.images={add:function(a){defer.counts.total+=1,a.defer={src:a.getAttribute("data-src"),index:defer.counts.total,loading:!1,loaded:!1},defer.imgs.push(a),(defer.dom.inView(a)||1===defer.counts.total)&&this.loadImg(a)},imgLoaded:function(a){var b=a.srcElement;b.className="loaded",this.loading-=1,defer.trace("#"+b.defer.index+" loaded"),b.onload=null,b.defer.loaded=!0,defer.loadTimes.push((new Date).getTime()-b.defer.loadStart),this.removeLoaded()},loadImg:function(a){this.loading+=1,defer.trace("#"+a.defer.index+" requested"),a.onload=function(a){defer.images.imgLoaded(a)},a.src=a.defer.src,a.defer.loading=!0,a.defer.loadStart=(new Date).getTime()},removeLoaded:function(){var a,b=[];for(a=0;a<defer.imgs.length;a+=1)defer.imgs[a].defer.loaded?delete defer.imgs[a].defer:b.push(defer.imgs[a]);defer.imgs=b},checkAll:function(){var a,b=0;for(b;b<defer.imgs.length;b+=1)a=defer.imgs[b],defer.dom.inView(a)&&!a.defer.loading&&this.loadImg(a)}},defer.bg={enabled:!0,guessNext:function(){if(this.enabled&&0===defer.counts.loading){defer.dom.checkScroll();var a,b,c=defer.counts.lastInView;if("up"===defer.scrollDir)for(a=defer.imgs.length-1;a>=0;){if(b=defer.imgs[a],b.defer.index<c&&!b.defer.loading){defer.trace("loading #"+b.defer.index+" in bg"),defer.images.loadImg(b);break}a-=1}else for(a=0;a<defer.imgs.length;){if(b=defer.imgs[a],b.defer.index>c&&!b.defer.loading){defer.trace("loading #"+b.defer.index+" in bg"),defer.images.loadImg(b);break}a+=1}}}},defer.dom={observer:!1,className:"defer",container:null,lastScrollPos:0,watchDom:function(a){this.container=a,void 0!==window.MutationObserver&&(this.observer=new MutationObserver(function(a){a.forEach(function(a){defer.dom.findImgs(a.addedNodes)})}),this.observer.observe(this.container,{attributes:!0,childList:!0,characterData:!1,subTree:!0,attributeFilter:["class"]}))},stopWatching:function(){this.observer&&this.observer.disconnect()},findImgs:function(a){var b,c;for(b=0;b<a.length;b+=1)c=a[b],c.childNodes.length>0&&defer.dom.findImgs(c.childNodes),c.classList&&c.classList.contains(defer.dom.className)&&defer.images.add(c)},inView:function(a){var b=a.getBoundingClientRect(),c=window.innerHeight||document.documentElement.clientHeight,d=b.bottom>=0&&b.top<=c;return d&&(defer.counts.lastInView=a.defer.index),d},checkScroll:function(){var a=void 0!==window.pageXOffset,b="CSS1Compat"===(document.compatMode||""),c=a?window.pageYOffset:b?document.documentElement.scrollTop:document.body.scrollTop;defer.scrollDir=c>this.lastScrollPos?"down":"up",this.lastScrollPos=c}}}({},function(){return this}());
//# sourceMappingURL=defer-images.min.js.map